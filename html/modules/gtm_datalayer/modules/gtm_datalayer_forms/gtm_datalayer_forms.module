<?php

/**
 * @file
 * Code for the Google Tag Manager dataLayer forms module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\gtm_datalayer_forms\Controller\DataLayerFormsController;

/**
 * Instantiates a new instance of DataLayerFormsController object.
 *
 * @return \Drupal\gtm_datalayer_forms\Controller\DataLayerFormsControllerInterface
 */
function gtm_datalayer_forms_get_controller() {
  static $datalayer_controller = NULL;

  if (!$datalayer_controller instanceof DataLayerFormsController) {
    $datalayer_controller = DataLayerFormsController::create(\Drupal::getContainer());
  }

  return $datalayer_controller;
}

/**
 * Implements hook_module_implements_alter().
 */
function gtm_datalayer_forms_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Move gtm_datalayer_forms_form_alter() to the end of the list.
    $group = $implementations['gtm_datalayer_forms'];
    unset($implementations['gtm_datalayer_forms']);
    $implementations['gtm_datalayer_forms'] = $group;
  }
}

/**
 * Implements hook_form_alter().
 */
function gtm_datalayer_forms_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Builds Google Tag Manager script code and attach needed libraries.
  gtm_datalayer_forms_get_controller()->buildGtmPusherScript($form, $form_state, $form_id);

  // Push tags on ajax submit without redirection.
  if ($form_state->isRebuilding() && $form_state->isSubmitted() && !$form_state->getErrors()) {
    // Collect and push stored tags.
    gtm_datalayer_forms_get_controller()->pushGtmTags($form);
  }
}

/**
 * Form validation handler.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function gtm_datalayer_forms_form_validate(array &$form, FormStateInterface $form_state) {
  // Builds Google Tag Manager script code and attach needed libraries.
  gtm_datalayer_forms_get_controller()->buildGtmPusherScript($form, $form_state, $form_state->getBuildInfo()['form_id'], 'validate');
}

/**
 * Form submission handler.
 *
 * @param array $form
 *   An associative array containing the structure of the form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function gtm_datalayer_forms_form_submit(array &$form, FormStateInterface $form_state) {
  // Builds Google Tag Manager script code and attach needed libraries.
  gtm_datalayer_forms_get_controller()->buildGtmPusherScript($form, $form_state, $form_state->getBuildInfo()['form_id'], 'submit');
}

/**
 * Implements hook_page_attachments().
 */
function gtm_datalayer_forms_page_attachments(array &$attachments) {
  // Collect and push stored tags.
  gtm_datalayer_forms_get_controller()->pushGtmTags($attachments);
}
