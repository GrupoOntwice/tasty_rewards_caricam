{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

<script type="text/javascript">
    window.current_lang = "{{language}}";
</script>

{%
  set classes = [
    node.bundle|clean_class,
    node.isPromoted() ? 'is-promoted',
    node.isSticky() ? 'is-sticky',
    not node.isPublished() ? 'is-unpublished',
    view_mode ? view_mode|clean_class,
    'clearfix',
  ]
%}
{% set banner_image = '/themes/tastytheme/src/images/recipe.jpg' %}

{% set nodeimgurl = file_url(content.field_recipe_image_detail['#items'].entity.uri.value)  ?: '' %}
{% set nodeimgalt = node.field_recipe_image_detail.alt ?: label %}
{% set nodetitle = node.label ?: '' %}
{% set subtitle = node.field_recipe_subtitle.value ?: node.title.value?: '' %}
{# {% set brand = node.field_brand.value %} #}
{% set how_to_make = node.field_recipe_how_to_make.value %}
{% set background_color = node.field_background_color.value %}
{% set prep_time = node.field_recipe_prep_time.value %}
{% set cook_time = node.field_recipe_cook_time.value %}
{% set video = node.field_recipe_video.value %}
{% set ingredients = node.field_recipe_ingredients.value|raw ?: '' %}
{% set chefcontent = node.field_chef_content.value|raw ?: '' %}
{% set chefname = node.field_chef_name.value ?: '' %}
{# {% set avg_rating = node.field_rating_voters.value %} #}
{# 
{% set nodeprepartiontime = content.field_recipe_prep_time.0 ?: '' %}
{% set nodecookingtime = content.field_recipe_cook_time.0 ?: '' %}
{% set nodehowtomake = node.field_recipe_how_to_make.value|raw ?: '' %}

{% set total_rating = content.field_total_rating.0|render|render  %}
{% set total_voters = content.field_rating_voters.0|render|render?:1  %}
{% set avg_rating = (total_rating / total_voters) |round  %}
{% set carousel = node.field_recipe_carousel %}
{% set ncarousel_items = carousel.getValue %} 
	#}

{#
{{ kint(ncarousel_items) }}
#}
{# {{ attach_library('tastytheme/html5gallery') }} #}

<article{{ attributes.addClass(classes) }}>
<span class="hidden node-url-translation" data-url="{{translated_url}}"></span>
{% if not has_translation %}
    <span class="hidden js-no-translation"></span>
{% endif %}
{% if brand|lower == 'tostitos' %}
    {% include '@brandstheme/includes/node-recipe-tostitos.html.twig' %}
{% elseif brand|lower == 'cheetos' %}
    {% include '@brandstheme/includes/node-recipe-cheetos.html.twig' %}
{% elseif brand|lower == 'crispyminis' %}
    {% include '@brandstheme/includes/node-recipe-crispyminis.html.twig' %}
{% elseif brand|lower == 'stacys' %}
    {% include '@brandstheme/includes/node-recipe-stacys.html.twig' %}
{% elseif brand|lower == 'quaker' %}
    {% include '@brandstheme/includes/node-recipe-quaker.html.twig' %}
{% elseif brand|lower == 'flaminhot' %}
    {% include '@brandstheme/includes/node-recipe-flaminhot.html.twig' %}
{% elseif brand|lower == 'capncrunch' %}
    {% include '@brandstheme/includes/node-recipe-capncrunch.html.twig' %}
{% endif %}





</article>
